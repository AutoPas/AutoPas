# This is a basic workflow to help you get started with Actions

name: test

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TSAN_OPTIONS: "ignore_noninstrumented_modules=1"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler-config:
          - CC: gcc
            CXX: g++
            image: autopas/autopas-build-gcc
          - CC: clang
            CXX: clang++
            image: autopas/autopas-build-clang
          - CC: clang
            CXX: clang++
            image: autopas/autopas-build-archer
            cmake_extra_args: "-DAUTOPAS_ENABLE_THREAD_SANITIZER=ON"
        #generator: [ "Unix Makefiles", "Ninja" ]
        #openmp: ["On", "Off"]


    container: ${{ matrix.compiler-config.image }}
    env:
      CC: ${{ matrix.compiler-config.CC }}
      CXX: ${{ matrix.compiler-config.CXX }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Run cmake and create directory build
      # We use `-Werror` to abort on errors.
      - name: Run Cmake
        run: CXXFLAGS="-Werror" cmake -B ./build -S ./ ${{matrix.compiler-config.cmake_extra_args}}

      # Run make
      - name: Run make
        working-directory: ./build
        run: cmake --build . --parallel $(nproc)

      # Run unit tests
      - name: Run tests
        working-directory: ./build
        run: ctest --verbose -j$(nproc)

      # Run example tests
      - name: Run examples
        working-directory: ./build/examples
        run: ctest -C checkExamples --verbose -j$(nproc)

# Workflow for unit tests
name: Tests and Checks

# Controls when the action will run.
on:
  push:
    # pushes to master
    branches: [ master ]
  pull_request:
    # PRs to master
    branches: [ master ]
# abort old runs if a new one is started
concurrency:
  group: ${{ github.head_ref }}-tests
  cancel-in-progress: true

jobs:
  MatrixJob:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        part: [1, 2]
        config: [
            # container      , CC   , CXX    , builder, mode   , OpenMP  , ASan, TSan
        [autopas-build-clang , clang, clang++, Ninja  , Debug  , OpenMP  , ON  , OFF  ],
        [autopas-build-clang , clang, clang++, Ninja  , Release, NoOpenMP, ON  , OFF  ],
        [autopas-build-archer, clang, clang++, Ninja  , Release, OpenMP  , OFF , ON   ],
        [autopas-build-clang , clang, clang++, Ninja  , Release, OpenMP  , ON  , OFF  ],
        [autopas-build-gcc   , gcc  , g++    , "'Unix Makefiles'", Release, OpenMP  , OFF , OFF  ],
        ]
    container: autopas/${{ matrix.config[0] }}
    env:
        TSAN_OPTIONS: "ignore_noninstrumented_modules=1"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build everything
        run: |
          mkdir build && cd build
          CXXFLAGS=-Wno-pass-failed CC=${{ matrix.config[1] }} CXX=${{ matrix.config[2] }} cmake \
            -G ${{ matrix.config[3] }} \
            -DCCACHE=ON \
            -DCMAKE_BUILD_TYPE=${{ matrix.config[4] }} \
            -DAUTOPAS_LOG_ALL=ON \
            -DAUTOPAS_OPENMP=${{ matrix.config[5] }} \
            -DAUTOPAS_ENABLE_ADDRESS_SANITIZER=${{ matrix.config[6] }} \
            -DAUTOPAS_ENABLE_THREAD_SANITIZER=${{ matrix.config[7] }} \
            ..
          entrypoint.sh cmake --build . --parallel 2 
      - name: Run tests ${{ matrix.part }}/2
        run: |
          cd build
          # Start with test 0 or 1 and do every second test
          ctest --output-on-failure -I ${{ matrix.part }},,2 -j 3


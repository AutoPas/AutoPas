<?xml version="1.0" encoding="UTF-8"?>
<!--
    This file is adapted from the IEEE 1855-2016 standard.
    It is not a complete representation of the standard. It just includes the parts that are relevant for the AutoPas library.
    For more information, see https://ieeexplore.ieee.org/document/7479441
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="fuzzySystem" type="FuzzySystemType">
        <xs:annotation>
            <xs:documentation>Fuzzy System</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="FuzzySystemType">
        <xs:sequence>
            <xs:element name="knowledgeBase" type="KnowledgeBaseType">
                <xs:annotation>
                    <xs:documentation>Fuzzy Concepts Collection</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:element name="mamdaniRuleBase" type="MamdaniRuleBaseType">
                    <xs:annotation>
                        <xs:documentation>Mamdani Fuzzy Rules
                            Collection
                        </xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="name" type="xs:ID" use="required"/>
    </xs:complexType>
    <xs:complexType name="KnowledgeBaseType">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="fuzzyVariable" type="FuzzyVariableType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="FuzzyVariableType">
        <xs:sequence>
            <xs:element name="fuzzyTerm" type="FuzzyTermType" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Fuzzy Set</xs:documentation>
                </xs:annotation>
            </xs:element>

        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="defuzzifier" default="COG">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="MM|COG|COA|WA|Custom"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="accumulation" default="MAX">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="MAX|SUM"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="scale" type="xs:string"/>
        <xs:attribute name="domainleft" type="xs:float" use="required"/>
        <xs:attribute name="domainright" type="xs:float" use="required"/>
        <xs:attribute name="defaultValue" type="xs:float" default="0"/>
        <xs:attribute name="type" default="input">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="input|output"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="FuzzyTermType">
        <xs:choice>
            <xs:element name="rightLinearShape" type="TwoParamType"/>
            <xs:element name="leftLinearShape" type="TwoParamType"/>
            <xs:element name="piShape" type="TwoParamType"/>
            <xs:element name="triangularShape" type="ThreeParamType"/>
            <xs:element name="gaussianShape" type="TwoParamType"/>
            <xs:element name="rightGaussianShape" type="TwoParamType"/>
            <xs:element name="leftGaussianShape" type="TwoParamType"/>
            <xs:element name="trapezoidShape" type="FourParamType"/>
            <xs:element name="singletonShape" type="OneParamType"/>
            <xs:element name="rectangularShape" type="TwoParamType"/>
            <xs:element name="zShape" type="TwoParamType"/>
            <xs:element name="sShape" type="TwoParamType"/>
            <xs:element name="userShape" type="UserShapeType"/>
        </xs:choice>
        <xs:attribute name="name" type="xs:ID" use="required"/>
        <xs:attribute name="complement" default="false">
            <xs:simpleType>
                <xs:restriction base="xs:boolean"/>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="OneParamType">
        <xs:attribute name="param1" type="xs:float" use="required"/>
    </xs:complexType>
    <xs:complexType name="TwoParamType">
        <xs:attribute name="param1" type="xs:float" use="required"/>
        <xs:attribute name="param2" type="xs:float" use="required"/>
    </xs:complexType>
    <xs:complexType name="ThreeParamType">
        <xs:attribute name="param1" type="xs:float" use="required"/>
        <xs:attribute name="param2" type="xs:float" use="required"/>
        <xs:attribute name="param3" type="xs:float" use="required"/>
    </xs:complexType>
    <xs:complexType name="FourParamType">
        <xs:attribute name="param1" type="xs:float" use="required"/>
        <xs:attribute name="param2" type="xs:float" use="required"/>
        <xs:attribute name="param3" type="xs:float" use="required"/>
        <xs:attribute name="param4" type="xs:float" use="required"/>
    </xs:complexType>
    <xs:complexType name="UserShapeType">
        <xs:sequence>
            <xs:element name="Point" type="PointType" minOccurs="2" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PointType">
        <xs:attribute name="x" type="xs:float" use="required"/>
        <xs:attribute name="y" type="xs:float" use="required"/>
    </xs:complexType>
    <xs:complexType name="RuleBaseType">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="activationMethod" default="MIN">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="PROD|MIN"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="andMethod" default="MIN">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="PROD|MIN"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="orMethod" default="MAX">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="PROBOR|MAX"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="MamdaniFuzzyRuleType">
        <xs:sequence>
            <xs:element name="antecedent" type="AntecedentType">
                <xs:annotation>
                    <xs:documentation>IF-part of a fuzzy rule</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="consequent" type="MamdaniConsequentType">
                <xs:annotation>
                    <xs:documentation>THEN[-ELSE]-part of a fuzzy rule</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="name" type="xs:ID" use="required"/>
        <xs:attribute name="andMethod" type="andMethodType" default="MIN"/>
        <xs:attribute name="orMethod" type="orMethodType" default="MAX"/>
        <xs:attribute name="connector" type="connectorType" default="and"/>
        <xs:attribute name="weight" type="weightType" default="1.0"/>
    </xs:complexType>
    <xs:simpleType name="standardTnormType">
        <xs:restriction base="xs:string">
            <!-- MIN reference: Equation (A.14) from IEEE Std 1855 -->
            <xs:enumeration value="MIN"/>
            <!-- PROD reference: Equation (A.15) from IEEE Std 1855 -->
            <xs:enumeration value="PROD"/>
            <!-- BDIF reference: Equation (A.16) from IEEE Std 1855 -->
            <xs:enumeration value="BSUM"/>
            <!-- DRP reference: Equation (A.17) from IEEE Std 1855 -->
            <xs:enumeration value="DRS"/>
            <!-- EPROD reference: Equation (A.18) from IEEE Std 1855 -->
            <xs:enumeration value="EPROD"/>
            <!-- HPROD reference: Equation (A.19) from IEEE Std 1855 -->
            <xs:enumeration value="HPROD"/>
            <!-- NILMIN reference: Equation (A.20) from IEEE Std 1855 -->
            <xs:enumeration value="NILMIN"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="andMethodType">
        <xs:union memberTypes="standardTnormType"/>
    </xs:simpleType>
    <xs:simpleType name="standardTconormType">
        <xs:restriction base="xs:string">
            <!-- MAX reference: Equation (A.21) from IEEE Std 1855 -->
            <xs:enumeration value="MAX"/>
            <!-- PROBOR reference: Equation (A.22) from IEEE Std 1855 -->
            <xs:enumeration value="PROBOR"/>
            <!-- BSUM reference: Equation (A.23) from IEEE Std 1855 -->
            <xs:enumeration value="BSUM"/>
            <!-- DRS reference: Equation (A.24) from IEEE Std 1855 -->
            <xs:enumeration value="DRS"/>
            <!-- ESUM reference: Equation (A.25) from IEEE Std 1855 -->
            <xs:enumeration value="ESUM"/>
            <!-- HSUM reference: Equation (A.26) from IEEE Std 1855 -->
            <xs:enumeration value="HSUM"/>
            <!-- NILMAX reference: Equation (A.27) from IEEE Std 1855 -->
            <xs:enumeration value="NILMAX"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="orMethodType">
        <xs:union memberTypes="standardTconormType"/>
    </xs:simpleType>
    <xs:simpleType name="connectorType">
        <xs:restriction base="xs:string">
            <xs:pattern value="and|AND|OR|or"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="weightType">
        <xs:restriction base="xs:float">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="1.0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="MamdaniRuleBaseType">
        <xs:complexContent>
            <xs:extension base="RuleBaseType">
                <xs:sequence>
                    <xs:element name="rule" type="MamdaniFuzzyRuleType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AntecedentType">
        <xs:sequence>
            <xs:element name="clause" type="ClauseType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="MamdaniConsequentType">
        <xs:sequence>
            <xs:element name="then" type="ThenType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ThenType">
        <xs:sequence>
            <xs:element name="clause" type="ClauseType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ClauseType">
        <xs:sequence>
            <xs:element name="variable">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:whiteSpace value="collapse"/>
                        <xs:pattern value="(([A-Z])|([a-z]))+([A-Z]|[a-z]|[0-9])*"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="term" type="xs:string">
            </xs:element>
        </xs:sequence>
        <xs:attribute name="modifier" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern
                            value="above|below|extremely|intensify|more_or_less|norm|not|plus|slightly|somewhat|very"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
</xs:schema>
